{
	"name": "creatingfct_order_analysis",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "order_details",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "order_items",
						"type": "DatasetReference"
					},
					"name": "orderitems"
				},
				{
					"dataset": {
						"referenceName": "itemsDataset",
						"type": "DatasetReference"
					},
					"name": "items"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "fct_order_analysis",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customer_rid as long,",
				"          order_date as timestamp,",
				"          rid as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          rid as integer,",
				"          order_rid as integer,",
				"          item_rid as integer,",
				"          quantity as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> orderitems",
				"source(output(",
				"          rid as integer,",
				"          name as string,",
				"          cost as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> items",
				"source1 select(mapColumn(",
				"          customer_rid,",
				"          order_date,",
				"          order_id = rid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"orderitems, items join(item_rid == items@rid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select1, join1 join(order_id == order_rid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          customer_rid,",
				"          order_date,",
				"          order_id,",
				"          item_id = item_rid,",
				"          quantity,",
				"          name,",
				"          cost",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}